#pragma once

#include "esphome/core/helpers.h"
#include "esphome/core/time.h"
//#include "text_traits.h"

namespace esphome {
namespace datetime {

class InputDatetime;

struct ESPTimeEx;

struct ESPTimeEx : public ESPTime
{
  bool has_time;
  bool has_date;

  void set_time(ESPTimeEx &time_to_set)
  {
    this->second = time_to_set.second;
    this->minute = time_to_set.minute;
    this->hour = time_to_set.hour;
    this->day_of_week = time_to_set.day_of_week;
    this->day_of_month = time_to_set.day_of_month;
    this->has_time = time_to_set.has_time;
    this->has_date = time_to_set.has_date;
  }

  std::string to_string()
  {
    std::string ret = strftime("[%F] [%H:%M:%S]");
    ret += " has time: " + has_time ? "yes" : "no";
    ret += " has date: " + has_date ? "yes" : "no";

    return ret;
  }
};

enum InputDatetimeOperation {
  INPUT_DATETIME_OP_NONE,
  INPUT_DATETIME_OP_SET_ALL,
  INPUT_DATETIME_OP_SET_DATETIME,
  INPUT_DATETIME_OP_SET_HAS_DATE_AND_HAS_TIME,
  INPUT_DATETIME_OP_SET_ALL_SET_ONES,
};

class InputDatetimeCall {
 public:
  explicit InputDatetimeCall(InputDatetime *parent) : parent_(parent) {}
  void perform();
  InputDatetimeCall &set_all(const ESPTime &value, bool has_date, bool has_time);
  InputDatetimeCall &set_value(const ESPTime &value);
  InputDatetimeCall &set_has_date(const bool has_date);
  InputDatetimeCall &set_has_time(const bool has_time);
  // InputDatetimeCall &set_has_date(const bool &has_date);
  // InputDatetimeCall &set_has_time(const bool &has_time);

  InputDatetimeCall &with_operation(InputDatetimeOperation operation);
  InputDatetimeCall &with_values(ESPTime value, bool has_date, bool has_time);
  InputDatetimeCall &with_value(ESPTime value);
  InputDatetimeCall &with_has_date(bool has_date);
  InputDatetimeCall &with_has_time(bool has_time);

 protected:
  InputDatetime *const parent_;
  InputDatetimeOperation operation_{INPUT_DATETIME_OP_NONE};
  optional<ESPTime> value_;
  optional<bool> has_date_;
  optional<bool> has_time_;
  bool validate_all_();
};

}  // namespace datetime
}  // namespace esphome
